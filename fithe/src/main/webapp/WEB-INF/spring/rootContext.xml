<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<!-- 
		현재 서버(탐캣)에서 dataSource 찾아오기 : DB연결
		java:comp/env : Java Naming Directory Interface의 환경변수 이름
		jdbc/Oracle11g_orclSHJ00 : dataSource 이름
	 -->
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:comp/env/jdbc/Oracle11g_orcl"></property>
	</bean>

	<!-- 
		마이바티스 쿼리문 찾아서 연결하기
		ref="dataSource" >> 18행의 dataSource id값과 동일
	 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="mapperLocations" value="classpath:/mybatisquery/*.xml"/>
	</bean>
	
	<!-- 트랜잭션 처리 : spring-mybatis에서는 개발자가 tx처리에 관여하지 않는다. -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- 
        DAO 또는 Mapper 찾기 
        <value> 태그 잘 입력할 것
    -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage">
			<value>com.fithe.**.dao</value>
		</property>
	</bean>

</beans>